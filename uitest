-- // MyUILib - Basic Roblox UI Library with Unload Support

local MyUILib = {}

-- Services
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Create main GUI container
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "MyUILibGUI"
screenGui.ResetOnSpawn = false
screenGui.IgnoreGuiInset = true
screenGui.Parent = PlayerGui

-- Function to create a UI window
function MyUILib:CreateWindow(name, size)
    local frame = Instance.new("Frame")
    frame.Name = name or "Window"
    frame.Size = UDim2.new(0, size.X or 300, 0, size.Y or 200)
    frame.Position = UDim2.new(0.5, -((size.X or 300)/2), 0.5, -((size.Y or 200)/2))
    frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    frame.BorderSizePixel = 0
    frame.AnchorPoint = Vector2.new(0.5, 0.5)
    frame.Parent = screenGui

    -- Top title label
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 30)
    title.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    title.BorderSizePixel = 0
    title.Text = name or "MyUILib Window"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.Font = Enum.Font.SourceSansBold
    title.TextSize = 20
    title.Parent = frame

    return frame
end

-- Function to add a toggle button
function MyUILib:AddToggle(parent, text, default, callback)
    local count = 0
    for _, v in ipairs(parent:GetChildren()) do
        if v:IsA("TextButton") then count += 1 end
    end

    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, -10, 0, 30)
    button.Position = UDim2.new(0, 5, 0, 35 + (count * 35))
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Text = text
    button.Font = Enum.Font.SourceSans
    button.TextSize = 18
    button.Parent = parent

    local state = default

    button.MouseButton1Click:Connect(function()
        state = not state
        button.Text = text .. " [" .. (state and "ON" or "OFF") .. "]"
        if callback then callback(state) end
    end)

    button.Text = text .. " [" .. (state and "ON" or "OFF") .. "]"
end

-- Function to add an unload button
function MyUILib:AddUnloadButton(parent)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 100, 0, 30)
    button.Position = UDim2.new(1, -110, 0, 5)
    button.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Text = "Unload UI"
    button.Font = Enum.Font.SourceSansBold
    button.TextSize = 16
    button.Parent = parent

    button.MouseButton1Click:Connect(function()
        MyUILib:Unload()
    end)
end

-- Unload function to destroy UI
function MyUILib:Unload()
    if screenGui then
        screenGui:Destroy()
    end
end

return MyUILib
